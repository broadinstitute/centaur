{
  "cache": {
    "workflowName": "cacheBetweenWF",
    "cacheBetweenWF.threeAgain": {
      "cache": {
        "cacheHitCall": "cacheWithinWF.three"
      }
    },
    "cacheBetweenWF.twoAgain": {
      "cache": {
        "cacheHitCall": "cacheWithinWF.two"
      }
    },
    "cacheBetweenWF.fourAgain": {
      "cache": {
        "cacheHitCall": "cacheWithinWF.two"
      }
    },
    "cacheBetweenWF.oneAgain": {
      "cache": {
        "cacheHitCall": "cacheWithinWF.one"
      }
    }
  },
  "assertEqual": {
    "cacheBetweenWF.twoAgain.inputs": "cacheBetweenWF.fourAgain.inputs",
    "cacheBetweenWF.twoAgain.outputs": "cacheBetweenWF.fourAgain.outputs"
  }
}